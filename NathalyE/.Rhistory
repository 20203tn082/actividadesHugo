marketing
iris
setwd("~/Miriam 9°A/BD")
USArrests
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento.R")
View(iris)
datos <- iris
View(datos)
class(datos)
class(datos$Species)
datos[,1:4] <- scale(datos[,1:4])
View(datos)
tam_train <- floor(0.8 * nrow(datos))
secuencia <- seq_len(nrow(datos))
class(secuencia)
indices_train <- sample(secuencia, size = tam_train)
indices_train
library("modeest")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
library("DMwR2")
datos <- read.csv("AB_NYC_2019.csv")
datos
datos <- read.csv("AB_NYC_2019.csv")
setwd("C:\\Users\\CC7\\Downloads")
datos <- read.csv("AB_NYC_2019.csv")
datos
datos_nyc <- read.csv("AB_NYC_2019.csv")
datos_nyc
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
datos_nyc
datos_nyc$reviews_per_month <- ifelse(datos_nyc$reviews_per_month == "", NA, datos_nyc$reviews_per_month)
datos_nyc
View(datos_nyc)
library("mice")
md.pattern(datos_nyc)
str(md.pattern(datos_nyc))
numObservacionesVacios <- md.pattern(datos_nyc)[3,17]
numObservacionesVacios
observacionesSinVacios <- na.omit(datos_nyc)
observacionesSinVacios
View(observacionesSinVacios)
View(datos_nyc)
View(datos_nyc)
datos_nyc$last_review <- ifelse(is.na(datos_nyc$last_review), mfv(datos_nyc$last_review, na.rm = TRUE), datos_nyc$last_review)
library("modeest")
library("modeest")
datos_nyc$last_review <- ifelse(is.na(datos_nyc$last_review), mfv(datos_nyc$last_review, na.rm = TRUE), datos_nyc$last_review)
datos_nyc$last_review <- ifelse(is.na(datos_nyc$last_review), mfv(datos_nyc$last_review, na_rm = TRUE), datos_nyc$last_review)
View(datos_nyc)
datos_nyc$reviews_per_month <- ifelse(is.na(datos_nyc$reviews_per_month), mfv(datos_nyc$reviews_per_month, na_rm = TRUE), datos_nyc$reviews_per_month)
View(datos_nyc)
datos_nyc <- na.omit(datos_nyc)
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
datos_nyc$reviews_per_month <- ifelse(datos_nyc$reviews_per_month == "", NA, datos_nyc$reviews_per_month)
View(datos_nyc)
datos_nyc <- na.omit(datos_nyc)
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
datos_nyc$reviews_per_month <- ifelse(datos_nyc$reviews_per_month == "", NA, datos_nyc$reviews_per_month)
datos_nyc$last_review <- ifelse(is.na(datos_nyc$last_review), mfv(datos_nyc$last_review, na_rm = TRUE), datos_nyc$last_review)
View(datos_nyc)
datos_nyc$reviews_per_month <- ifelse(is.na(datos_nyc$reviews_per_month), mfv(datos_nyc$reviews_per_month, na_rm = TRUE), datos_nyc$reviews_per_month)
View(datos_nyc)
boxplot.stats(datos_nyc$number_of_reviews)
length(boxplot.stats(datos_nyc$number_of_reviews)$out)
tipos <- factor(datos_nyc$room_type)
nlevels(tipos)
tipos
nlevels(tipos)
rownames(nlevels(tipos))
tipos <- row.names(factor(datos_nyc$room_type))
tipos
tipos <-factor(datos_nyc$room_type)
nlevels(tipos)
datos_nyc[datos_nyc$price >= 5000 & datos_nyc$price <= 7500]
View(datos_nyc[datos_nyc$price >= 5000 & datos_nyc$price <= 7500])
nrow(datos_nyc[datos_nyc$price >= 5000 & datos_nyc$price <= 7500])
datos_nyc$price
nrow(datos_nyc[datos_nyc$price >= 5000 & datos_nyc$price <= 7500,])
library("dplyr")
propiedades <- datos_nyc %>% group_by(neighbourhood)
propiedades
View(propiedades)
propiedades <- datos_nyc %>% group_by(neighbourhood) %>% summarize(total_propiedades = sum(neighbourhood))
max(datos_nyc$price)
datos_nyc$precio <- cut(datos_nyc, breaks = 3, labels = c("caro", "medio", "económico"))
datos_nyc$precio <- cut(datos_nyc$precio, breaks = 3, labels = c("caro", "medio", "económico"))
datos_nyc$price <- cut(datos_nyc$price, breaks = 3, labels = c("caro", "medio", "económico"))
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$precio <- cut(datos_nyc$price, breaks = 3, labels = c("caro", "medio", "económico"))
View(datos_nyc)
datos_nyc$precio <- cut(datos_nyc$price, breaks = 3, labels = c("económico", "medio", "caro"))
View(datos_nyc)
setwd("C:\\Users\\CC7\\Downloads")
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
datos_nyc$reviews_per_month <- ifelse(datos_nyc$reviews_per_month == "", NA, datos_nyc$reviews_per_month)
View(datos_nyc)
library("mice")
md.pattern(datos_nyc)
str(md.pattern(datos_nyc))
numObservacionesVacios <- md.pattern(datos_nyc)[3,17]
numObservacionesVacios
datos_nyc <- na.omit(datos_nyc)
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
datos_nyc$reviews_per_month <- ifelse(datos_nyc$reviews_per_month == "", NA, datos_nyc$reviews_per_month)
View(datos_nyc)
library("modeest")
propiedades <- datos_nyc %>% count(neighbourhood)
propiedades
View(propiedades)
propiedades <- datos_nyc %>% count(neighbourhood)
propiedades <- datos_nyc %>% count(neighbourhood)
View(propiedades)
setwd("C:\\Users\\CC7\\Downloads")
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
View(datos_nyc)
library("mice")
numObservacionesVacios <- md.pattern(datos_nyc)[3,17]
numObservacionesVacios
datos_nyc <- na.omit(datos_nyc)
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
View(datos_nyc)
nrow(datos_nyc[!complete.cases(datos_nyc),])
numObservacionesVacios <- md.pattern(datos_nyc)[3,17]
numObservacionesVacios
datos_nyc <- na.omit(datos_nyc)
View(datos_nyc)
datos_nyc <- read.csv("AB_NYC_2019.csv")
View(datos_nyc)
datos_nyc$last_review <- ifelse(datos_nyc$last_review == "", NA, datos_nyc$last_review)
View(datos_nyc)
library("modeest")
datos_nyc$last_review <- ifelse(is.na(datos_nyc$last_review), mfv(datos_nyc$last_review, na_rm = TRUE), datos_nyc$last_review)
View(datos_nyc)
datos_nyc$reviews_per_month <- ifelse(is.na(datos_nyc$reviews_per_month), mfv(datos_nyc$reviews_per_month, na_rm = TRUE), datos_nyc$reviews_per_month)
View(datos_nyc)
length(boxplot.stats(datos_nyc$number_of_reviews)$out)
library("dplyr")
propiedades <- datos_nyc %>% count(neighbourhood)
View(propiedades)
tipos <-factor(datos_nyc$room_type)
nlevels(tipos)
nrow(datos_nyc[datos_nyc$price >= 5000 & datos_nyc$price <= 7500,])
datos_nyc$precio <- cut(datos_nyc$price, breaks = 3, labels = c("económico", "medio", "caro"))
View(datos_nyc)
View(USArrests)
datos <- USArrests
setwd("~/Miriam 9°A/BD")
source("~/Miriam 9°A/BD/agrupamiento.R")
source("~/Miriam 9°A/BD/agrupamiento.R")
source("~/Miriam 9°A/BD/agrupamiento.R")
dato <- scale(datos[,1:3])
dato
install.packages("factoextra")
library("factoextra")
install.packages("factoextra")
fviz_nbclust(datos, kmeans, method="wss")
library("factoextra")
fviz_nbclust(datos, kmeans, method="wss")
fviz_nbclust(datos, kmeans, method="silhouette")
fviz_nbclust(datos, kmeans, method="gap_stat")
install.packages("NbClust")
library("NbClust")
clusters <- NbClust(datos, distance="euclidean")
clusters <- NbClust(datos, distance="euclidean", min.nc = 2, max.nc = 10, method ="kmeans",
index = "alllong")
clusters
agrupamiento <- kmeans(datos,2)
agrupamiento
fviz_cluster(agrupamiento, datos)
fviz_cluster(agrupamiento, data = datos, ellipse.type = "norm", palette = "Set2",
ggtheme = theme_minimal())
datos <- USArrests
datos$cluster <- agrupamiento$cluster
datos
datos
datos$cluster <- ifelse(datos$cluster == 1, "Más violento", "Menos violento")
datos
fviz_nbclust(datos, kmeans, method="gap_stat")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
datos <- read.csv("taipei_hotel1.csv")
datos <- scale(datos)
datos <- read.csv("taipei_hotel1.csv")
datos <- scale(datos)
datos
View(USArrests)
View(datos)
datos <- scale(datos[,3:4])
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
agrupamiento <- kmeans(datos,3)
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
plot(datos1$lon, datos1$lat, col=datos1$cluster)
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
datos2
install.packages("class")
library("class")
install.packages("class")
install.packages("class")
library("class")
View(iris)
datos <- iris
View(datos)
class(datos)
class(datos$Species)
datos[,1:4] <- scale(datos[,1:4])
View(datos)
tam_train <- floor(0.8 * nrow(datos))
secuencia <- seq_len(nrow(datos))
class(secuencia)
indices_train <- sample(secuencia, size = tam_train)
datos_train <- datos[indices_train, 1:4] #PARA ENTRENAR el 120
datos_test <- datos[-indices_train, 1:4] #datos prueba
clase_train <- datos[indices_train, 5] #el otro 20 %
clase_test <- datos[-indices_train, 5]
dim(datos_train)
class(clase_train)
clasificacion <- knn(datos_train, datos_test, clase_train, k = sqrt(nrow(datos)))
clasificacion
datos_text_clasificacion <- datos_test
datos_test_clasificacion <- datos_test
View(datos_test)
datos_test_clasificacion <- datos_test
datos_test_clasificacion$Clasificacion <- clasificacion
View(datos_test_clasificacion)
install.packages("ggpot2")
library("ggpot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill = Clase)) +
geom_point(size = 7) +
geom_text(aes(label=Clase)) +
theme(legend.position = "none")
library("ggplot2")
ggplot(datos_test_clasificacion, aes(x=Sepal.Length, y=Sepal.Width, color=Clase,fill=Clase))+geom_point(size=7)+geom_text(aes(label=Clase)) + theme(legend.position = "none")
library("ggplot2")
datos_test_clasificacion <- datos_test
datos_test_clasificacion$Clasificacion <- clasificacion
datos_test_clasificacion$Clasificacion <- clasificacion
library("ggplot2")
ggplot(datos_test_clasificacion, aes(x=Sepal.Length, y=Sepal.Width, color=Clase,fill=Clase))+geom_point(size=7)+geom_text(aes(label=Clase)) + theme(legend.position = "none")
class(clase_train)
library("class")
clasificacion <- knn(datos_train, datos_test, clase_train, k = sqrt(nrow(datos))) #clasifici
View(datos_test)
datos_test_clasificacion <- datos_test
datos_test_clasificacion$Clasificacion <- clasificacion
View(datos_test_clasificacion)
library("ggplot2")
ggplot(datos_test_clasificacion, aes(x=Sepal.Length, y=Sepal.Width, color=Clase,fill=Clase))+geom_point(size=7)+geom_text(aes(label=Clase)) + theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)+
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase)) +
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase)) +
theme(legend.position = "none")
datos_train <- datos[indices_train, 1:4] #PARA ENTRENAR el 120
datos_test <- datos[-indices_train, 1:4] #datos prueba
clase_train <- datos[indices_train, 5] #el otro 20 %
clase_test <- datos[-indices_train, 5]
dim(datos_train)
class(clase_train)
library("class")
install.packages("class")
install.packages("class")
install.packages("class")
install.packages("class")
library("class")
clasificacion <- knn(datos_train, datos_test, clase_train, k = sqrt(nrow(datos))) #clasifici
View(datos_test)
datos_test_clasificacion <- datos_test
View(datos_test_clasificacion)
datos_test_clasificacion$Clasificacion <- clasificacion
View(datos_test_clasificacion)
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase)) +
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)
datos_test_clasificacion
datos_test_clasificacion$Clase <- clasificacion
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color=Clase,fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase)) +
theme(legend.position = "none")
tab <- table(clasificacion, clase_test)
diag(tab)
rowSums(tab)
accuracy <- function(tabla){
sum(diag(tabla) /sum(rowSums(tabla)))*100
}
accuracy(tab)
tab <- table(clasificacion, clase_test)
diag(tab)
rowSums(tab)
tab
setwd("~/Miriam 9°A/BD")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento ejercicio 1107.R")
View(datos
)
setwd("~/Miriam 9°A/BD")
source("~/Miriam 9°A/BD/Tarea agrupamiento.R")
source("~/Miriam 9°A/BD/Tarea agrupamiento.R")
library("factoextra")
datos <- read.csv("CVD_cleaned.csv")
datos$Exercise <- ifelse(datos$Exercise == "No", 2, 1)
datos$Heart_Disease <- ifelse(datos$Heart_Disease == "No", 2, 1)
datos$Smoking_History <- ifelse(datos$Smoking_History == "No", 2, 1)
View(datos)
datos <- scale(datos[,c(2,3,14,15)])
fviz_nbclust(datos, kmeans, method="silhouette")
library("NbClust")
clusters <- NbClust(datos, distance="euclidean", min.nc = 2, max.nc = 10, method ="kmeans",index = "alllong")
print(clusters)
clusters <- NbClust(datos, distance="euclidean", min.nc = 2, max.nc = 10, method ="kmeans",index = "alllong")
print(clusters)
agrupamiento <- kmeans(datos,3)
agrupamiento
datos <- read.csv("CVD_cleaned.csv")
datos$cluster <- agrupamiento$cluster
datos1 <- datos
datos2 <- read.csv("CVD_cleaned2.csv")
plot(datos1$Heart_Disease, datos1$Smoking_History, col=datos1$cluster)
plot(datos1$Heart_Disease, datos1$Smoking_History, col=datos1$cluster)
source("~/.active-rstudio-document")
setwd("~/Miriam 9°A/BD")
imagen <- readPNG("17.png", TRUE)
setwd("~/Miriam 9°A/BD")
imagen <- readPNG("17.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
matriz <- cbind(as.integer(which(imagen <- 1)%%28), which(imagen <- -1)/28)
matriz <- cbind(as.integer(which(imagen <- 1)%%28), which(imagen < -1)/28)
matriz <- cbind(as.integer(which(imagen < 1)%%28), which(imagen < -1)/28)
plot(matriz)
source("C:/Users/CC7/Documents/Miriam 9°A/BD/agrupamiento imagenes 1407.R", echo=TRUE)
install.packages("png")
agrupamiento <- kmeans(matriz, 2)
plot(matriz, col=agrupamiento$cluster)
hullplot(matriz, agrupamiento)
plot(matriz)
View(imagen)
imagen <- readPNG("17.png", TRUE)
imagen <- readPNG("17.png", TRUE)
install.packages("png")
library("png")
imagen <- readPNG("17.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
View(imagen)
matriz <- cbind(as.integer(which(imagen < 1)%%28), which(imagen < -1)/28)
plot(matriz)
matriz <- cbind(as.integer(which(imagen < 1)%%28), which(imagen < -1)/28)
plot(matriz)
View(matriz)
matriz <- cbind(as.integer(which(imagen < -1)%%28), which(imagen < -1)/28)
plot(matriz)
install.packages("png")
library("png")
imagen <- readPNG("flor.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
View(imagen)
# which devuelve un verdadero cuando se cumple la condición
# el operador %% se refiere al módulo
which(imagen < -1)
#reduce la resolución de la imagen
#sustituir el 28 por el número de pixeles que se requiera
matriz <- cbind(as.integer(which(imagen < -1)%%50), which(imagen < -1)/28)
plot(matriz)
imagen <- readPNG("flor2.png", TRUE)
imagen <- readPNG("17.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
# which devuelve un verdadero cuando se cumple la condición
# el operador %% se refiere al módulo
which(imagen < -1)
#reduce la resolución de la imagen
#sustituir el 28 por el número de pixeles que se requiera
matriz <- cbind(as.integer(which(imagen < -1)%%50), which(imagen < -1)/28)
plot(matriz)
imagen <- readPNG("flor.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
# which devuelve un verdadero cuando se cumple la condición
# el operador %% se refiere al módulo
which(imagen < -1)
#reduce la resolución de la imagen
#sustituir el 28 por el número de pixeles que se requiera
matriz <- cbind(as.integer(which(imagen < -1)%%28), which(imagen < -1)/28)
plot(matriz)
imagen <- readPNG("17.png", TRUE)
imagen <- imagen[, nrow(imagen):1]
# which devuelve un verdadero cuando se cumple la condición
# el operador %% se refiere al módulo
which(imagen < -1)
#reduce la resolución de la imagen
#sustituir el 28 por el número de pixeles que se requiera
matriz <- cbind(as.integer(which(imagen < -1)%%28), which(imagen < -1)/28)
plot(matriz)
agrupamiento <- kmeans(matriz, 2)
plot(matriz, col=agrupamiento$cluster)
install.packages("dbscan")
library("dbscan")
hullplot(matriz, agrupamiento)
densidad <- dbscan(matriz, 2)
plot(matriz, col=densidad$cluster)
# Densidad
# proximidad entre los elementos de un cluster
# DBSCAN <- Density based
install.packages("dbscan")
install.packages("Rcpp")
library("dbscan")
library("Rcpp")
# Kmeans pone un punto central hacia todos
# DBSCAN mide la distancia de todos los puntos entre todos
# Depende la situación, si la imagen tiene elmentos más pegados entre sí
# Agrupamiento
View(matriz)
# no es # cluster, epsilon
# v proximidad entre los puntos
# el 2 es la distancia que tomara entre cada punto
densidad <- dbscan(matriz, 2)
plot(matriz, col=densidad$cluster)
hullplot(matriz, densidad)
install.packages("tm")
install.packages("SnowballC")
library("tm")
library("SnowballC")
news <- c("La tragedia del submarino Titán: el video animado que recrea cómo fue la implosión y el hundimiento",
"Roku más sencillo de usar cuesta menos de $400 pesos en Prime Day",
"Neuquén: hallaron a un animal pocas veces visto",
"Transplante de pelo: el costo puede sorprenderte",
"Michel Kuri, el exnovio de Lucero que ha borrado de sus redes",
"La actriz Tori Spelling vive en un hotel “barato” de Los Ángeles junto a sus cinco hijos")
vector <- VectorSource(news)
# Corpus <- se encarga de separar las palabras
corpus <- Corpus(vector)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))
corpus <- tm_map(corpus, removePunctuation)
# Realizó el conteo de cada una por cada registro
corpus <- tm_map(corpus, stemDocument)
setwd("C:\\Users\\CC7\\Documents\\EjerciciosHugo-Nath")
iq <- read.csv("coeficiente.csv")
iq <- read.csv("coeficiente.csv")
iq
datos <- read.csv("coeficiente.csv")
datos <- read.csv("coeficiente.csv")
modleo <- lm(IQ ~ Cerebro + Altura, data = datos)
modleo
datos <- read.csv("coeficientes.csv")
modelo <- lm(IQ ~ Cerebro + Altura, data = datos)
modelo
iq <- 203.066 + 1.251 * Cerebro -2.935 * Altura
modelo
datos
iq <- 203.066 + 1.251 * Cerebro -2.935 * Altura
iq <- 203.066 + 1.251 * cerebro -2.935 * altura
modelo <- lm(IQ ~ Cerebro + Altura, data = datos)
modelo <- lm(IQ ~ Cerebro + Altura, data = datos)
iq <- 203.066 + 1.251 * cerebro -2.935 * altura
iq

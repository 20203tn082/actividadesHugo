price <- 100
precio = 100
price <- "Hola"
price <- 100
if(price < 100){
print("<100")
}else{
print(">100")
}
quantity <- c(1,1,2,1,2)
quantity
ifelse(quantity == 1, 'Yes', 'No')
price <- c(58,100,110)
if(price < 100){
print("<100")
}else if(price == 100){
print("=100")
}else{
print(">100")
}
price <- c(58,100,110)
if(all(price>100)){
print("<100")
}
price <- c(58,100,110)
if(all(price>100)){
print("<100")
}
if(any(price<100)){
print("Alguno <100")
}
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
"Weekend"
)
}
days("Mon")
days(5)
days(6)
days("Hola")
quantity <- c(1,2,3,4,5)
#Media aritmetica  = promedio
avg_qty <- function(qty,type){
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity)))
}
avg_qty(quantity,"arithmetic")
avg_qty(quantity,"geometric")
price_discounted <- c(1)
price <- c(30,120,50,70,150,100,50,25,110)
for(i in 1:length(price)){
price_discounted[i] <- price[i] - price[i] * 0.1
print(price_discounted[i])
}
print(price_discounted)
index <- 1
while(index <3){
#paste es para concatenar
print(paste("Index is", index))
index <- index + 1
}
x <- 1
repeat{
print(x)
x <- x + 1
if( x == 3){
#rompe el ciclo infinito
break
}
}
setwd("C:\Users\CC7\Downloads")
setwd("C:\Users\CC7\Downloads")
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header=TRUE,
#si tiene un identificador mi excel
row.names = 1,
sep=",",
dec = "."
)
class(maraton)
dim(maraton)
names(maraton)
maraton
View(maraton)
class(maraton)
class(TRUE)
class("Hola")
class(9)
class(9.0)
class(c(1,2,3,4,5))
class(C("1","3",12))
class(C("1","3",12))
class(c(1,2,3,4,5))
class(c("1","3",12))
dim(maraton)
names(maraton)
str(maraton)
nrow(maraton)
library("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
glimpse(maraton)
library("dplyr")
glimpse(maraton)
summary(maraton)
meses <- c('enero', 'febrero', 'marzo')
meses
ventas <- c(120,10,80)
objectivo <- c(TRUE, FALSE, TRUE)
data()
datos <- data.frame(meses, ventas, objetivo)
objetivo <- c(TRUE, FALSE, TRUE)
datos <- data.frame(meses, ventas, objetivo)
datos
str(datos)
str(iris)
summary(datos)
AirPassengers
head(AirPassengers)
tail(AirPassengers)
datos[1,]
datos[,1]
datos[1, 'ventas']
datos[1, c('meses', 'objetivo')]
datos
subset(datos, subset = ventas <= 100)
orden <- c(datos['ventas'])
orden
orden <- order(datos['ventas'])
orden
datos[orden, ]
orden <- order(datos['ventas'])
orden
orden.de <- order(-datos['ventas'])
orden.de
datos[orden.de, ]
datos[1, 'ventas']
datos$ventas
datos['objetivo']
Titanic
numeros <- 1:10
letras <- letters[1:10]
numeros
letras
data <- data.frame(col1 = numeros, col2 = letras)
data
write.csv(data, file = 'data.csv')
write.csv(data, file = 'data.csv')
write.csv(data, file = 'data.csv')
read.csv('data.csv')
datos2$X <- NULL
datos2 <- read.csv('data.csv')
datos2$X <- NULL
datos2
datos1 <- data.frame(numeros, letras})
datos1 <- data.frame(numeros, letras})
datos1 <- data.frame(numeros, letras)
datos1
datos2 <- data.frame(numeros = 11, letras = 'k')
datos2
datos3 <- rbind(datos1, datos2)
datos3
datos3$multiplicacion <- datos$numeros*2
datos3$multiplicacion <- datos3$numeros*2
datos3
colnames(datos3)
colnames(datos3) <- c('c1', 'c2', 'c3')
datos3
colnames(datos3)[3] <- 'Nueva'
datos3
datos3[datos$c1 > 6]
datos3
datos3[datos3$c1 > 6,]
print(nombres)
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Dataframe.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Dataframe.R")
iris
conteo <- c(sum(iris$Species == 'setosa'), sum(iris$Species == 'versicolor'), sum(iris$Species == 'virginica'))
conteo
names(conteo) <- c('setosa', 'versicolor', 'virginica')
print(conteo)
conteo <- table(iris$Species)
conteo
conteo <- sum(iris$Species)
setosa <- iris[iris$Species == 'setosa']
setosa <- iris[iris$Species == 'setosa', ]
setosa
setosa.desv <- sapply(setosa[, 1:4], sd)
setosa.desv
setosa.anchura <- sd(iris$Petal.Width)
setosa.anchura
setosa.anchura <- sd(setosa$Petal.Width)
setosa.anchura
source("C:/Users/CC7/Documents/Miriam 9°A/BD/DataframeE2.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/DataframeE2.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/DataframeE2.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/DataframeE2.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/DataframeE2.R")
setwd("C:\\Users\\CC7\\Downloads")
rentas <- read.csv("contaminacion.csv",
header = TRUE,
sep = ",",
dec =".")
View(contaminacion)
setwd("C:\\Users\\CC7\\Downloads")
contaminacion <- read.csv("contaminacion.csv",
header = TRUE,
sep = ",",
dec =".")
View(contaminacion)
is.na(contaminacion)
complete.cases(contaminacion)
View(is.na(contaminacion))
contaminacion[!complete.cases(contaminacion),]
is.na(contaminacion)
install.packages(mice)
install.packages("mice")
library("mice")
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton.csv",
header = TRUE,
sep = ",",
dec =".")
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,
sep = ",",
dec =".")
md.pattern(maraton)
md.pattern(contaminacion)
nrow(contaminacion)
duplicated(contaminacion)
which.duplicated(contaminacion)
!duplicated(contaminacion)
contaminacion[!duplicated(contaminacion),]
contaminacion[duplicated(contaminacion),]
contaminacion($cn)
contaminacion(cn)
sum(contaminacion$cn)
sum(contaminacion4cn, na.rm = TRUE)
sum(contaminacion$cn, na.rm = TRUE)
sum(contaminacion$CN, na.rm = TRUE)
contaminacion$CN_p <- ifese(is.na(contaminacion$CN), mean(contaminacion$CN, na.rm = TRUE), contaminacion$CN)
contaminacion$CN_p <- ifelse(is.na(contaminacion$CN), mean(contaminacion$CN, na.rm = TRUE), contaminacion$CN)
contaminacion
install.packages("modeest")
library("modeest")
b <- data.frame(v1 = c("a", "b", "c", "d"), v2 = c("hola", "hola", "NA", "adios"))
b <- data.frame(v1=c("a","b","c","d"),v2=c("hola","hola",NA,"adios"))
b$v2_moda <- ifelse(is.na(b$v2),mfv(b$v2,na_rm = TRUE),b$v2)
b
setwd("~/Miriam 9°A/BD")
datamarketing <- read.csv('data-marketing.csv')
datamarketing <- read.csv('data-marketing.csv')
datamarketing
xy <- sum(datamarketing$Spend * datamarketing$Sales)
datamarketing$new <- sum(datamarketing$Spend * datamarketing$Sales)
datamarketing
datamarketing <- read.csv('data-marketing.csv')
datamarketing$ne <- sum(datamarketing$Spend * datamarketing$Sales)
datamarketing <- read.csv('data-marketing.csv')
datamarketing$xy <- sum(as.numeric(datamarketing$Spend) * as.numeric(datamarketing$Sales))
datamarketing
datamarketing$xy <- as.numeric(datamarketing$Spend) * as.numeric(datamarketing$Sales)
datamarketing$xy <- as.numeric(datamarketing$Spend) ^ 2
datamarketing
datamarketing$xy <- as.numeric(datamarketing$Spend) * as.numeric(datamarketing$Sales)
datamarketing$x2 <- as.numeric(datamarketing$Spend) ^ 2
datamarketing
a <- ((nrow(datamarketing)*sum(datamarketing$xy) - (sum(datamarketing$Spend)*sum(datamarketing$Sales)))
)
a <- ((nrow(datamarketing)*sum(datamarketing$xy)) - (sum(datamarketing$Spend)*sum(datamarketing$Sales)))
a <- ((nrow(datamarketing)*sum(datamarketing$xy)) - (sum(as.numeric(datamarketing$Spend))*sum(as.numeric(datamarketing$Sales)))
)
datamarketing
a
a <- ((nrow(datamarketing)*sum(datamarketing$xy)) - (sum(as.numeric(datamarketing$Spend))*sum(as.numeric(datamarketing$Sales))) / ((nrow(datamarketing)*sum(as.numeric(datamarketing$x2))) / (sum(as.numeric(datamarketing$Spend)))^2 )
)
a
a <- ((nrow(datamarketing)*sum(datamarketing$xy)) - (sum(as.numeric(datamarketing$Spend))*sum(as.numeric(datamarketing$Sales))) / ((nrow(datamarketing)*sum(as.numeric(datamarketing$x2))) - (sum(as.numeric(datamarketing$Spend)))^2)
)
a
a1 <- ((nrow(datamarketing)*sum(datamarketing$xy)) - (sum(as.numeric(datamarketing$Spend))*sum(as.numeric(datamarketing$Sales))))
a1
a2 <- ((nrow(datamarketing)*sum(as.numeric(datamarketing$x2))) - (sum(as.numeric(datamarketing$Spend)))^2
)
a2 <- ((nrow(datamarketing)*sum(as.numeric(datamarketing$x2)) - (sum(as.numeric(datamarketing$Spend))^2)
a2 <- ((nrow(datamarketing)*sum(datamarketing$x2)) - (sum(as.numeric(datamarketing$Spend))^2)
a2 <- (nrow(datamarketing)*sum(datamarketing$x2)) - (sum(as.numeric(datamarketing$Spend))^2)
a2
a <- a1 / a2
a
b1 <- (sum(as.numeric(datamarketing$Sales))*sum(datamarketing$x2)) - (sum(as.numeric(datamarketing$Sales))*sum(datamarketing$xy))
b <- b1 / a2
b
b1
b1 <- (sum(as.numeric(datamarketing$Sales))*sum(datamarketing$x2)) - (sum(as.numeric(datamarketing$Spend))*sum(datamarketing$xy))
b1
b <- b1 / a2
b
datamarketing$y <- (a*as.numeric(datamarketing$Spend))+b
datamarketing
plot(datamarketing$Spend, datamarketing$Sales)
plot(datamarketing$Spend, datamarketing$Sales)
abline(datamarketing$xy)
abline(datamarketing$y)
plot(datamarketing$Spend, datamarketing$Sales)
install.packages("ggplot2")
library(ggplot2)
ggplot(datamarketing, aes(x=Spend, y=Sales)) + geom_point()+theme_light()
mod1 <- lm(Sales - Spend, data = datamarketing)
mod1 <- lm(Sales ~ Spend, data = datamarketing)
mod1
ggplot(datamarketing, aes(x=Spend, y=Sales)) + geom_point() + geom_smooth(method='lm', formula = y~x, se = FALSE, col='dodgerblue1') + theme_light()
install.packages("DMwR2"
library("DMwR2")
install.packages("DMwR2")
library("DMwR2")
setwd("C:\\Users\\CC7\\Downloads")
contaminacion <- read.csv("contaminacion.csv",
header = TRUE,
sep = ",",
dec =".")
View(contaminacion)
kcontaminacion <- knnImputation(contaminacion)
kcontaminacion
rivers
plot.rivers
plot(rivers)
boxplot(rivers, horizontal = true)
boxplot(rivers, horizontal = TRUE)
boxplot.stats(rivers)
variable <- boxplot.stats(rivers)
variable
variable$n
variable$stats
minimo < -min(variable$stats)
minimo <- min(variable$stats)
minimo
maximo <- max(variable$stats)
maximo
inferior <- variable$stats[1]
inferior
delete?
nuevo <- rivers[rivers < superior & rivers > inferior]
nuevo
nuevo <- rivers[rivers < superior & rivers > inferior]
inferior <- variable$stats[1]
superior <- variable$stats[5]
nuevo <- rivers[rivers < superior & rivers > inferior]
nuevo
variable <- boxplot.stats(rivers)
variable
nuevo <- rivers[rivers < superior & rivers > inferior]
nuevo
variable2 <- boxplot.stats(nuevo)
variable2
variable <- boxplot.stats(rivers)
nuevo <- rivers
while(length(variable$out) > 0){
inferior <- variable$stats[1]
superior <- variable$stats[5]
nuevo <- rivers[rivers < superior & rivers > inferior]
variable <- boxplot.stats(nuevo)
}
boxplot(nuevo)
nuevo
nuevo
variable
source("~/Miriam 9°A/BD/Regresión lineal.R")
setwd("~/Miriam 9°A/BD")
source("~/Miriam 9°A/BD/Regresión lineal.R")
source("~/Miriam 9°A/BD/Regresión lineal.R")
mod <- lm(Sales ~ Spend, data=datamarketing)
mod
mod <- lm(Sales ~ Month + Spend, data=datamarketing)
print(mod)
summary(mod)
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
install.packages("ggplot2")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/Miriam 9°A/BD/Regresión polinomial.R")
source("C:/Users/CC7/Documents/actividadesHugo/NathalyE/Clasificación k-nn.R")
source("C:/Users/CC7/Documents/actividadesHugo/NathalyE/Clasificación k-nn.R")
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton.csv",
header = TRUE,
sep = ",",
dec =".")
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv")
maraton$nivel <- cut(maraton$time, breaks=3, labes=c("alto","medio", "bajo"))
View(maraton)
maraton$nivel <- cut(maraton$time, breaks = 3, labels = c("alto","medio","bajo"))
View(maraton)
source("~/actividadesHugo/NathalyE/Clase13Junio.R")
install.packages(scaes)
install.packages("scales")
library("scales")
data_conv <- read.csv("data-conversion.csv")
(data_conv$Age-min(data_conv$Age))/(max(data_conv$Age)-min(data_conv$Age))
rescale(data_conv$Age)
salary <- read.csv("salary.csv")
scale(salary[,c(1,2)])
plot(salary)
View(saary)
escalado <- scale(salary[,c(1,2)])
plot(escalado)
View(salary)
plot(escalado[,1])
plot(escalado[,2])
x <- sin(seq(0,4 * pi, length.out = 100))
plot(x, type = "l")
plot(x, type = "l")
#agrega ineas y ese color
lines(smoothing(x, method = "smooth"), type="l", col="blue")
lines(smoothing(x, method = "smooth"), type="l", col="blue")
x <- sin(seq(0,4 * pi, length.out = 100)) + rnorm(100, 0, 0.2) #Generar una onda
plot(x, type = "l")
lines(smoothing(x, method = "smooth"), type="l", col="blue")
install.packages("modelbased")
library("modelbased")
lines(smoothing(x, method = "smooth"), type="l", col="blue")
lines(smoothing(x, method = "loess"), type="l", col="red")
plot(salary$salary, type="l")
lines(smoothing(salary$salary, method = "smooth"), type="l", col="blue")
lines(smoothing(salary$salary, method = "loess"), type="l", col="red")
